{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jasvir\\\\Desktop\\\\Project\\\\eresonate-wookie-test\\\\src\\\\Pages\\\\HomePage\\\\HomePage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { GenreList } from '../components/GenreList/GenreList';\nimport { Header } from '../components/Header/Header';\nimport Network from '../../network';\nexport const HomePage = () => {\n  const initialMovieObject = {\n    genres: {},\n    movies: []\n  };\n  const [moviesObject, setMovieObject] = useState(initialMovieObject);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let response = await Network.getAllMovies();\n        let newMoviesObject = { ...moviesObject\n        }; // Create the genres that are returned\n\n        for (let movie of response.data.movies) {\n          for (let genre of movie.genres) {\n            if (moviesObject.genres.hasOwnProperty(genre)) {\n              moviesObject.genres[genre].push(movie);\n            } else {\n              moviesObject.genres[genre] = [movie];\n            }\n          }\n        }\n\n        setMovieObject(newMoviesObject);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), Object.keys(moviesObject.genres).map(genreKey => /*#__PURE__*/React.createElement(GenreList, {\n    title: genreKey,\n    movies: moviesObject.genres[genreKey],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 64\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/Jasvir/Desktop/Project/eresonate-wookie-test/src/Pages/HomePage/HomePage.js"],"names":["React","useEffect","useState","GenreList","Header","Network","HomePage","initialMovieObject","genres","movies","moviesObject","setMovieObject","fetchMovies","response","getAllMovies","newMoviesObject","movie","data","genre","hasOwnProperty","push","e","console","log","Object","keys","map","genreKey"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAMC,kBAAkB,GAAG;AACvBC,IAAAA,MAAM,EAAE,EADe;AAEvBC,IAAAA,MAAM,EAAE;AAFe,GAA3B;AAIA,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCT,QAAQ,CAACK,kBAAD,CAA/C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,WAAW,GAAG,YAAY;AAC5B,UAAG;AACC,YAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACS,YAAR,EAArB;AACA,YAAIC,eAAe,GAAG,EAAC,GAAGL;AAAJ,SAAtB,CAFD,CAIC;;AACA,aAAK,IAAIM,KAAT,IAAkBH,QAAQ,CAACI,IAAT,CAAcR,MAAhC,EAAuC;AACnC,eAAK,IAAIS,KAAT,IAAkBF,KAAK,CAACR,MAAxB,EAA+B;AAC3B,gBAAGE,YAAY,CAACF,MAAb,CAAoBW,cAApB,CAAmCD,KAAnC,CAAH,EAA6C;AACzCR,cAAAA,YAAY,CAACF,MAAb,CAAoBU,KAApB,EAA2BE,IAA3B,CAAgCJ,KAAhC;AACH,aAFD,MAEK;AACDN,cAAAA,YAAY,CAACF,MAAb,CAAoBU,KAApB,IAA6B,CAACF,KAAD,CAA7B;AACH;AACJ;AACJ;;AAEDL,QAAAA,cAAc,CAACI,eAAD,CAAd;AACH,OAhBD,CAgBC,OAAMM,CAAN,EAAQ;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KApBD;;AAqBAT,IAAAA,WAAW;AACd,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKY,MAAM,CAACC,IAAP,CAAYf,YAAY,CAACF,MAAzB,EAAiCkB,GAAjC,CAAsCC,QAAQ,iBAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,QAAlB;AAA4B,IAAA,MAAM,EAAEjB,YAAY,CAACF,MAAb,CAAoBmB,QAApB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlD,CAFL,CADJ;AAMH,CAtCM","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {GenreList} from '../components/GenreList/GenreList';\r\nimport {Header} from '../components/Header/Header';\r\nimport Network from '../../network';\r\n\r\nexport const HomePage = () => {\r\n    const initialMovieObject = {\r\n        genres: {},\r\n        movies: []\r\n    }\r\n    const [moviesObject, setMovieObject] = useState(initialMovieObject)\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            try{\r\n                let response = await Network.getAllMovies()\r\n                let newMoviesObject = {...moviesObject}\r\n    \r\n                // Create the genres that are returned\r\n                for( let movie of response.data.movies){\r\n                    for( let genre of movie.genres){\r\n                        if(moviesObject.genres.hasOwnProperty(genre)){\r\n                            moviesObject.genres[genre].push(movie)\r\n                        }else{\r\n                            moviesObject.genres[genre] = [movie]\r\n                        }\r\n                    }\r\n                }\r\n    \r\n                setMovieObject(newMoviesObject)\r\n            }catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n        fetchMovies()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {Object.keys(moviesObject.genres).map( genreKey => <GenreList title={genreKey} movies={moviesObject.genres[genreKey]}/>)}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}